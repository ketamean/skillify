create table if not exists public.users (
  created_at timestamp with time zone not null default now(),
  first_name text not null,
  last_name text null,
  avatar_image_link text null,
  email text not null,
  bio text null,
  id uuid not null,
  type public.UserType not null default 'Learner'::"UserType",
  constraint learners_pkey primary key (id),
  constraint users_email_key unique (email),
  constraint learners_id_fkey foreign KEY (id) references auth.users (id),
  constraint learners_bio_check check ((length(bio) <= 500))
) TABLESPACE pg_default;

create table if not exists public.topics (
  id smallint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  name text not null,
  constraint topics_pkey primary key (id),
  constraint topics_name_key unique (name)
) TABLESPACE pg_default;

create table if not exists public.courses (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  name text not null,
  image_link text not null,
  status public.CourseStatus null default 'InReview'::"CourseStatus",
  fee double precision not null default '0'::double precision,
  short_description text not null default ''::text,
  instructor_id uuid not null,
  constraint courses_pkey primary key (id),
  constraint courses_instructor_id_fkey foreign KEY (instructor_id) references users (id),
  constraint courses_fee_check check ((fee >= (0)::double precision)),
  constraint courses_name_check check (
    (
      (length(name) > 0)
      and (length(name) <= 70)
    )
  ),
  constraint courses_short_description_check check ((length(short_description) <= 180))
) TABLESPACE pg_default;

create table if not exists public.coursedescriptions (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  course_id bigint not null,
  header text not null,
  content text not null,
  "order" smallint not null,
  constraint coursedescriptions_pkey primary key (id),
  constraint coursedescriptions_course_id_fkey foreign KEY (course_id) references courses (id),
  constraint coursedescriptions_content_check check (
    (
      (length(content) > 0)
      and (length(content) <= 1000)
    )
  ),
  constraint coursedescriptions_header_check check (
    (
      (length(header) > 0)
      and (length(header) <= 60)
    )
  ),
  constraint coursedescriptions_order_check check (("order" >= 0))
) TABLESPACE pg_default;

create table if not exists private.coursematerials (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  type private.MaterialType not null,
  constraint coursematerials_pkey primary key (id)
) TABLESPACE pg_default;

create table if not exists public.coursevideosections (
  id bigint generated by default as identity not null,
  name text not null,
  course_id bigint not null,
  "order" smallint not null,
  constraint coursevideosections_pkey primary key (id),
  constraint coursevideosections_course_id_fkey foreign KEY (course_id) references courses (id),
  constraint coursevideosections_order_check check (("order" >= 0))
) TABLESPACE pg_default;

create table if not exists public.courserelatedtopics (
  id bigint generated by default as identity not null,
  course_id bigint not null,
  topic_id smallint not null,
  constraint course - topics_pkey primary key (id),
  constraint course - topics_course_id_fkey foreign KEY (course_id) references courses (id),
  constraint course - topics_topic_id_fkey foreign KEY (topic_id) references topics (id)
) TABLESPACE pg_default;

create table if not exists public.coursevideos (
  id bigint generated by default as identity not null,
  thumbnail_link text not null default ''::text,
  is_public boolean not null default false,
  course_id bigint null,
  title text null,
  description text not null default ''::text,
  section_id bigint null,
  duration text null,
  constraint coursevideos_pkey primary key (id),
  constraint coursevideos_course_id_fkey foreign KEY (course_id) references courses (id),
  constraint coursevideos_id_fkey foreign KEY (id) references coursematerials (id),
  constraint coursevideos_id_fkey1 foreign KEY (id) references coursematerials (id),
  constraint coursevideos_section_id_fkey foreign KEY (section_id) references coursevideosections (id)
) TABLESPACE pg_default;

create table if not exists public.coursevideos_public (
  id bigint generated by default as identity not null,
  link text not null,
  constraint coursevideos_public_pkey primary key (id),
  constraint coursevideos_public_id_fkey foreign KEY (id) references coursevideos (id)
) TABLESPACE pg_default;

create table if not exists private.coursevideos_private (
  id bigint generated by default as identity not null,
  link text not null,
  constraint coursevideos_private_pkey primary key (id),
  constraint coursevideos_private_id_fkey foreign KEY (id) references coursevideos (id)
) TABLESPACE pg_default;

create table if not exists public.learnerenrolments (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  course_id bigint not null,
  learner_id uuid not null,
  constraint learnerenrolments_pkey primary key (id),
  constraint learnerenrolments_course_id_fkey foreign KEY (course_id) references courses (id),
  constraint learnerenrolments_learner_id_fkey foreign KEY (learner_id) references users (id)
) TABLESPACE pg_default;

create table if not exists private.coupons (
  id bigint generated by default as identity not null,
  discount_value double precision not null,
  expiration_time timestamp with time zone not null,
  max_n_usage smallint not null default '1'::smallint,
  code text not null,
  discount_type private.CouponDiscountType not null,
  status private.CouponStatus null default 'OutOfUse'::private."CouponStatus",
  coupon_type private.CouponType not null,
  n_used smallint not null default '0'::smallint,
  constraint coupons_pkey primary key (id),
  constraint coupons_code_key unique (code),
  constraint coupons_code_check check (
    (
      (length(code) > 0)
      and (length(code) <= 20)
    )
  ),
  constraint coupons_max_n_usage_check check ((max_n_usage > 0)),
  constraint coupons_n_used_check check ((n_used >= 0)),
  constraint coupons_expiration_time_check check ((expiration_time > now())),
  constraint coupons_discount_value_check check ((discount_value >= (0)::double precision))
) TABLESPACE pg_default;

create table if not exists private.coursecoupons (
  id bigint generated by default as identity not null,
  course_id bigint not null,
  constraint particularcoupons_pkey primary key (id),
  constraint particularcoupons_course_id_fkey foreign KEY (course_id) references courses (id),
  constraint particularcoupons_id_fkey foreign KEY (id) references private.coupons (id)
) TABLESPACE pg_default;

create table if not exists private.instructorcoupons (
  id bigint generated by default as identity not null,
  instructor_id uuid not null,
  constraint generalcoupons_pkey primary key (id),
  constraint generalcoupons_id_fkey foreign KEY (id) references private.coupons (id),
  constraint instructorcoupons_instructor_id_fkey foreign KEY (instructor_id) references users (id)
) TABLESPACE pg_default;
create table if not exists private.coursedocuments (
  id bigint generated by default as identity not null,
  link text not null,
  title text not null,
  description text not null,
  course_id bigint not null,
  constraint coursedocuments_pkey primary key (id),
  constraint coursedocuments_course_id_fkey foreign KEY (course_id) references courses (id),
  constraint coursedocuments_id_fkey foreign KEY (id) references coursematerials (id)
) TABLESPACE pg_default;

create table if not exists private.coursematerialcomments (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  course_material_id bigint not null,
  content text not null,
  commenter uuid not null,
  constraint coursematerialcomments_pkey primary key (id),
  constraint coursematerialcomments_commenter_fkey foreign KEY (commenter) references private.users (id),
  constraint coursematerialcomments_commenter_fkey1 foreign KEY (commenter) references users (id),
  constraint coursematerialcomments_course_material_id_fkey1 foreign KEY (course_material_id) references private.coursematerials (id),
  constraint coursematerialcomments_content_check check ((length(content) <= 200))
) TABLESPACE pg_default;

create table if not exists private.coursequizzes (
  id bigint generated by default as identity not null,
  duration smallint not null default '10'::smallint,
  title text not null,
  description text not null,
  course_id bigint not null,
  constraint coursequizzes_pkey primary key (id),
  constraint coursequizzes_course_id_fkey foreign KEY (course_id) references courses (id),
  constraint coursequizzes_id_fkey foreign KEY (id) references coursematerials (id)
) TABLESPACE pg_default;

create table if not exists private.coursequizdetails (
  id bigint generated by default as identity not null,
  quiz_id bigint not null,
  question text not null,
  type private.QuizQuestionType not null,
  choices text[] null,
  provided_key smallint null,
  constraint coursequizdetails_pkey primary key (id),
  constraint coursequizdetails_quiz_id_fkey foreign KEY (quiz_id) references private.coursequizzes (id),
  constraint coursequizdetails_provided_key_check check ((provided_key >= 0))
) TABLESPACE pg_default;